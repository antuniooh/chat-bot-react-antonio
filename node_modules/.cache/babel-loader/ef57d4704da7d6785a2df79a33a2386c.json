{"ast":null,"code":"import { INPUT_SUCCESS, INPUT_FAIL, SESSION_SUCCESS, SESSION_FAIL, MESSAGE_SUCCESS, MESSAGE_FAIL } from \"./types\";\nimport axios from \"axios\";\nexport const userMessage = message => async dispatch => {\n  try {\n    dispatch({\n      type: INPUT_SUCCESS,\n      payload: message\n    });\n  } catch (err) {\n    dispatch({\n      type: INPUT_FAIL\n    });\n  }\n};\nexport const createSession = () => async dispatch => {\n  try {\n    console.log(\"Create session\");\n    const res = await axios.get(\"https://server-chatbot-antonio.herokuapp.com/api/watson/session\").then(function (response) {\n      console.log(\"Criei a sessão\");\n      axios.defaults.headers.common[\"session_id\"] = response.data['session_id'];\n    });\n    dispatch({\n      type: SESSION_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: SESSION_FAIL\n    });\n  }\n};\nexport const sendMessage = message => async dispatch => {\n  try {\n    const body = {\n      input: message\n    };\n    const res = await axios.post(\"https://server-chatbot-antonio.herokuapp.com/api/watson/message\", body);\n    dispatch({\n      type: MESSAGE_SUCCESS,\n      payload: res.data.output.generic[0].text\n    });\n  } catch (err) {\n    dispatch({\n      type: MESSAGE_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/home/antonio/Documents/chatbot-antonio/src/actions/watson.js"],"names":["INPUT_SUCCESS","INPUT_FAIL","SESSION_SUCCESS","SESSION_FAIL","MESSAGE_SUCCESS","MESSAGE_FAIL","axios","userMessage","message","dispatch","type","payload","err","createSession","console","log","res","get","then","response","defaults","headers","common","data","sendMessage","body","input","post","output","generic","text"],"mappings":"AAAA,SACEA,aADF,EAEEC,UAFF,EAGEC,eAHF,EAIEC,YAJF,EAKEC,eALF,EAMEC,YANF,QAOO,SAPP;AASA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAIC,OAAD,IAAa,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,aAAR;AAAuBW,MAAAA,OAAO,EAAEH;AAAhC,KAAD,CAAR;AACD,GAFD,CAEE,OAAOI,GAAP,EAAY;AACZH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACD;AACF,CANM;AAQP,OAAO,MAAMY,aAAa,GAAG,MAAM,MAAOJ,QAAP,IAAoB;AACrD,MAAI;AACFK,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,UAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,iEAAV,EACjBC,IADiB,CACZ,UAAUC,QAAV,EAAoB;AACxBL,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAT,MAAAA,KAAK,CAACc,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,YAA9B,IAA8CH,QAAQ,CAACI,IAAT,CAAc,YAAd,CAA9C;AACD,KAJiB,CAAlB;AAMAd,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,eAAR;AAAyBS,MAAAA,OAAO,EAAEK,GAAG,CAACO;AAAtC,KAAD,CAAR;AACD,GATD,CASE,OAAOX,GAAP,EAAY;AACZH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAR;AACD;AACF,CAbM;AAeP,OAAO,MAAMqB,WAAW,GAAIhB,OAAD,IAAa,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AACF,UAAMgB,IAAI,GAAG;AAAEC,MAAAA,KAAK,EAAElB;AAAT,KAAb;AACA,UAAMQ,GAAG,GAAG,MAAMV,KAAK,CAACqB,IAAN,CAAW,iEAAX,EAA8EF,IAA9E,CAAlB;AAEAhB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,eADC;AAEPO,MAAAA,OAAO,EAAEK,GAAG,CAACO,IAAJ,CAASK,MAAT,CAAgBC,OAAhB,CAAwB,CAAxB,EAA2BC;AAF7B,KAAD,CAAR;AAID,GARD,CAQE,OAAOlB,GAAP,EAAY;AACZH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AACD;AACF,CAZM","sourcesContent":["import {\n  INPUT_SUCCESS,\n  INPUT_FAIL,\n  SESSION_SUCCESS,\n  SESSION_FAIL,\n  MESSAGE_SUCCESS,\n  MESSAGE_FAIL,\n} from \"./types\";\n\nimport axios from \"axios\";\n\nexport const userMessage = (message) => async (dispatch) => {\n  try {\n    dispatch({ type: INPUT_SUCCESS, payload: message });\n  } catch (err) {\n    dispatch({ type: INPUT_FAIL });\n  }\n};\n\nexport const createSession = () => async (dispatch) => {\n  try {\n    console.log(\"Create session\")\n    const res = await axios.get(\"https://server-chatbot-antonio.herokuapp.com/api/watson/session\")\n    .then(function (response) {\n      console.log(\"Criei a sessão\");\n      axios.defaults.headers.common[\"session_id\"] = response.data['session_id'];\n    });\n\n    dispatch({ type: SESSION_SUCCESS, payload: res.data });\n  } catch (err) {\n    dispatch({ type: SESSION_FAIL });\n  }\n};\n\nexport const sendMessage = (message) => async (dispatch) => {\n  try {\n    const body = { input: message };\n    const res = await axios.post(\"https://server-chatbot-antonio.herokuapp.com/api/watson/message\", body)\n \n    dispatch({\n      type: MESSAGE_SUCCESS,\n      payload: res.data.output.generic[0].text,\n    });\n  } catch (err) {\n    dispatch({ type: MESSAGE_FAIL });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}