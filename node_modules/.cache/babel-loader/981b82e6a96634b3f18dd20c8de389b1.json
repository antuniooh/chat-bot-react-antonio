{"ast":null,"code":"var _jsxFileName = \"/home/antonio/chat-bot-react-antonio/src/components/chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, button } from \"react\";\nimport { connect } from \"react-redux\"; //  Import action\n\nimport { userMessage, sendMessage } from \"../../actions/watson\"; //  Function that handles user submission\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst handleClick = async e => {\n  console.log(message);\n  userMessage(message);\n  sendMessage(message);\n  setMessage(\"\");\n};\n\nconst Chat = ({\n  chat,\n  userMessage,\n  sendMessage\n}) => {\n  _s();\n\n  // Handle Users Message\n  const [message, setMessage] = useState(\"\");\n  const endOfMessages = useRef(null);\n\n  const scrollToBottom = () => {\n    endOfMessages.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  useEffect(scrollToBottom, [chat]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ant\\xF4nio Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"historyContainer\",\n        children: [chat.length === 0 ? \"\" : chat.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: msg.type,\n          children: msg.message\n        }, msg.type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 31\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: endOfMessages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footerInput\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"chatBox\",\n        onChange: e => setMessage(e.target.value),\n        value: message,\n        placeholder: \"Type a message here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"customButton\",\n        onClick: this.handleClick,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"umRjliTTWvovmu9KR20kFWwAI0Q=\");\n\n_c = Chat;\n\nconst mapStateToProps = state => ({\n  chat: state.watson.messages\n});\n\nexport default connect(mapStateToProps, {\n  userMessage,\n  sendMessage\n})(Chat);\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/antonio/chat-bot-react-antonio/src/components/chat/Chat.js"],"names":["React","useState","useEffect","useRef","button","connect","userMessage","sendMessage","handleClick","e","console","log","message","setMessage","Chat","chat","endOfMessages","scrollToBottom","current","scrollIntoView","behavior","length","map","msg","type","target","value","mapStateToProps","state","watson","messages"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,MAA7C,QAA2D,OAA3D;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,sBAAzC,C,CAEA;;;;AACA,MAAMC,WAAW,GAAG,MAAOC,CAAP,IAAa;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACAN,EAAAA,WAAW,CAACM,OAAD,CAAX;AACAL,EAAAA,WAAW,CAACK,OAAD,CAAX;AACAC,EAAAA,UAAU,CAAC,EAAD,CAAV;AACD,CALD;;AAOA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQT,EAAAA,WAAR;AAAqBC,EAAAA;AAArB,CAAD,KAAwC;AAAA;;AACnD;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMe,aAAa,GAAGb,MAAM,CAAC,IAAD,CAA5B;;AAEA,QAAMc,cAAc,GAAG,MAAM;AAC3BD,IAAAA,aAAa,CAACE,OAAd,CAAsBC,cAAtB,CAAqC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAArC;AACD,GAFD;;AAGAlB,EAAAA,SAAS,CAACe,cAAD,EAAiB,CAACF,IAAD,CAAjB,CAAT;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACA;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA,eAIA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BAEE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,mBACGA,IAAI,CAACM,MAAL,KAAgB,CAAhB,GACG,EADH,GAEGN,IAAI,CAACO,GAAL,CAAUC,GAAD,iBAAS;AAAK,UAAA,SAAS,EAAEA,GAAG,CAACC,IAApB;AAAA,oBAA0CD,GAAG,CAACX;AAA9C,WAA+BW,GAAG,CAACC,IAAnC;AAAA;AAAA;AAAA;AAAA,gBAAlB,CAHN,eAIE;AAAK,UAAA,GAAG,EAAER;AAAV;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YAJA,eAcA;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BAEE;AACE,QAAA,EAAE,EAAC,SADL;AAEE,QAAA,QAAQ,EAAGP,CAAD,IAAOI,UAAU,CAACJ,CAAC,CAACgB,MAAF,CAASC,KAAV,CAF7B;AAGE,QAAA,KAAK,EAAEd,OAHT;AAIE,QAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,OAAO,EAAE,KAAKJ,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAvCD;;GAAMM,I;;KAAAA,I;;AAwCN,MAAMa,eAAe,GAAIC,KAAD,KAAY;AAClCb,EAAAA,IAAI,EAAEa,KAAK,CAACC,MAAN,CAAaC;AADe,CAAZ,CAAxB;;AAIA,eAAezB,OAAO,CAACsB,eAAD,EAAkB;AAAErB,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CAAuDO,IAAvD,CAAf","sourcesContent":["import React, { useState, useEffect, useRef, button } from \"react\";\nimport { connect } from \"react-redux\";\n\n//  Import action\nimport { userMessage, sendMessage } from \"../../actions/watson\";\n\n//  Function that handles user submission\nconst handleClick = async (e) => {\n  console.log(message);\n  userMessage(message);\n  sendMessage(message);\n  setMessage(\"\");\n};\n\nconst Chat = ({ chat, userMessage, sendMessage }) => {\n  // Handle Users Message\n  const [message, setMessage] = useState(\"\");\n  const endOfMessages = useRef(null);\n\n  const scrollToBottom = () => {\n    endOfMessages.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n  useEffect(scrollToBottom, [chat]);\n\n  return (\n    <div className=\"App\">\n    <header className=\"App-header\">\n      <h1>Ant√¥nio Chatbot</h1>\n    </header>\n    <div className=\"chat\">\n      {/* Handle Messages */}\n      <div className=\"historyContainer\">\n        {chat.length === 0\n          ? \"\"\n          : chat.map((msg) => <div className={msg.type} key={msg.type}>{msg.message}</div>)}\n        <div ref={endOfMessages}></div>\n      </div>\n      {/* Input Box */}\n    </div>\n    <div className=\"footerInput\">\n\n      <input\n        id=\"chatBox\"\n        onChange={(e) => setMessage(e.target.value)}\n        value={message}\n        placeholder=\"Type a message here...\"\n      ></input>\n      <button className=\"customButton\" onClick={this.handleClick}>\n        Send\n      </button>  \n    </div>  \n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  chat: state.watson.messages,\n});\n\nexport default connect(mapStateToProps, { userMessage, sendMessage })(Chat);\n"]},"metadata":{},"sourceType":"module"}